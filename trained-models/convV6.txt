 MultiLayerConfiguration conf = new NeuralNetConfiguration.Builder()
                .seed(rngseed)
                .l2(0.005)
                .activation(Activation.RELU)
                .weightInit(WeightInit.XAVIER)
                .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)
                .updater(new Nesterovs(0.005,0.9))
                .list()
                .layer(0, new ConvolutionLayer.Builder(new int[]{7,7}, new int[]{1,1}, new int[]{0,0})
                        .nIn(channels)
                        .nOut(10)
                        .biasInit(0)
                        .build())
                .layer(1, new SubsamplingLayer.Builder(new int[]{2,2}, new int[]{2,2}).build())
                .layer(2, new ConvolutionLayer.Builder(new int[]{5,5}, new int[]{1,1}, new int[]{0,0})
                        .nOut(20)
                        .biasInit(0)
                        .build())
                .layer(3,new SubsamplingLayer.Builder(new int[]{2,2}, new int[]{2,2}).build())
                .layer(4, new DenseLayer.Builder().nOut(200).build())
                .layer(5, new OutputLayer.Builder(LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD)
                        .nOut(outputNum)
                        .activation(Activation.SOFTMAX)
                        .build())
                .setInputType(InputType.convolutional(height, width, channels))
                .build();